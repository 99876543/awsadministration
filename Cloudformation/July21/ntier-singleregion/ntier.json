{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Creating ntier architecture",
    "Parameters": {
        "vpccidr": {
            "Description": "This is vpc cidr range",
            "Type": "String",
            "Default": "10.10.0.0/16"
        },
        "web1az": {
            "Description": "AZ of the web1 subnet",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        },
        "web2az": {
            "Description": "AZ of the web2 subnet",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        },
        "app1az": {
            "Description": "AZ of the app1 subnet",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        },
        "app2az": {
            "Description": "AZ of the app2 subnet",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        },
        "db1az": {
            "Description": "AZ of the db1 subnet",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        },
        "db2az": {
            "Description": "AZ of the db2 subnet",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        },
        "webkeypair": {
            "Description": "Key Pair for web ec2 instnce",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "appkeypair": {
            "Description": "Key Pair for app ec2 instnce",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "webinstancetype": {
            "Description": "Instance type of web server",
            "Type": "String",
            "Default": "t2.micro",
            "AllowedValues": [
                "t2.micro",
                "t2.small",
                "t2.large"
            ]
        },
        "appinstancetype": {
            "Description": "Instance type of app server",
            "Type": "String",
            "Default": "t2.micro",
            "AllowedValues": [
                "t2.micro",
                "t2.small",
                "t2.large"
            ]
        }
    },
    "Resources": {
        "ntiervpc": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": {
                    "Ref": "vpccidr"
                },
                "EnableDnsHostnames": true,
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "ntier"
                    }
                ]
            }
        },
        "web1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "web1az"
                },
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "CidrBlock": {
                    "Fn::Select": [
                        0,
                        {
                            "Fn::Cidr": [
                                {
                                    "Ref": "vpccidr"
                                },
                                6,
                                8
                            ]
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "web-1"
                    }
                ]
            }
        },
        "web2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "web2az"
                },
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "CidrBlock": {
                    "Fn::Select": [
                        1,
                        {
                            "Fn::Cidr": [
                                {
                                    "Ref": "vpccidr"
                                },
                                6,
                                8
                            ]
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "web-2"
                    }
                ]
            }
        },
        "app1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "app1az"
                },
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "CidrBlock": {
                    "Fn::Select": [
                        2,
                        {
                            "Fn::Cidr": [
                                {
                                    "Ref": "vpccidr"
                                },
                                6,
                                8
                            ]
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "app-1"
                    }
                ]
            }
        },
        "app2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "app2az"
                },
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "CidrBlock": {
                    "Fn::Select": [
                        3,
                        {
                            "Fn::Cidr": [
                                {
                                    "Ref": "vpccidr"
                                },
                                6,
                                8
                            ]
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "app-2"
                    }
                ]
            }
        },
        "db1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "db1az"
                },
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "CidrBlock": {
                    "Fn::Select": [
                        4,
                        {
                            "Fn::Cidr": [
                                {
                                    "Ref": "vpccidr"
                                },
                                6,
                                8
                            ]
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "db-1"
                    }
                ]
            }
        },
        "db2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "db2az"
                },
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "CidrBlock": {
                    "Fn::Select": [
                        5,
                        {
                            "Fn::Cidr": [
                                {
                                    "Ref": "vpccidr"
                                },
                                6,
                                8
                            ]
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "db-2"
                    }
                ]
            }
        },
        "ntierigw": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "ntierigw"
                    }
                ]
            }
        },
        "AttachGateway": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "InternetGatewayId": {
                    "Ref": "ntierigw"
                }
            }
        },
        "ntierpublicrt": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "ntierpublicrt"
                    }
                ]
            }
        },
        "publicroute": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": {
                    "Ref": "ntierpublicrt"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "ntierigw"
                }
            }
        },
        "ntierprivatert": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "ntierprivatert"
                    }
                ]
            }
        },
        "webnacl": {
            "Description": "This is web nacl",
            "Type": "AWS::EC2::NetworkAcl",
            "Properties": {
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "webnacl"
                    }
                ]
            }
        },
        "webnaclallowinternal": {
            "Description": "Inbound rule for web nacl",
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "CidrBlock": {
                    "Ref": "vpccidr"
                },
                "RuleNumber": 100,
                "NetworkAclId": {
                    "Ref": "webnacl"
                },
                "Protocol": -1,
                "RuleAction": "allow"
            }
        },
        "webnaclallexternal": {
            "Description": "outbound rule for web nacl",
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "CidrBlock": "0.0.0.0/0",
                "RuleNumber": 100,
                "NetworkAclId": {
                    "Ref": "webnacl"
                },
                "Protocol": -1,
                "Egress": true,
                "RuleAction": "allow"
            }
        },
        "webnaclallinhttp": {
            "Description": "Inbound rule for web nacl",
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "CidrBlock": "0.0.0.0/0",
                "PortRange": {
                    "From": 80,
                    "To": 80
                },
                "RuleNumber": 105,
                "NetworkAclId": {
                    "Ref": "webnacl"
                },
                "Protocol": 6,
                "RuleAction": "allow"
            }
        },
        "web1naclassociation": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "webnacl"
                },
                "SubnetId": {
                    "Ref": "web1"
                }
            }
        },
        "web2naclassociation": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "webnacl"
                },
                "SubnetId": {
                    "Ref": "web2"
                }
            }
        },
        "appnacl": {
            "Description": "appnacl",
            "Type": "AWS::EC2::NetworkAcl",
            "Properties": {
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "appnacl"
                    }
                ]
            }
        },
        "appnaclallexternal": {
            "Description": "outbound rule for web nacl",
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "CidrBlock": "0.0.0.0/0",
                "RuleNumber": 100,
                "NetworkAclId": {
                    "Ref": "appnacl"
                },
                "Protocol": -1,
                "Egress": true,
                "RuleAction": "allow"
            }
        },
        "appnaclallowinternal": {
            "Description": "Inbound rule for web nacl",
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "CidrBlock": {
                    "Ref": "vpccidr"
                },
                "RuleNumber": 100,
                "NetworkAclId": {
                    "Ref": "appnacl"
                },
                "Protocol": -1,
                "RuleAction": "allow"
            }
        },
        "app2naclassociation": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "appnacl"
                },
                "SubnetId": {
                    "Ref": "app2"
                }
            }
        },
        "app1naclassociation": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "appnacl"
                },
                "SubnetId": {
                    "Ref": "app1"
                }
            }
        },
        "dbnacl": {
            "Description": "appnacl",
            "Type": "AWS::EC2::NetworkAcl",
            "Properties": {
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "dbnacl"
                    }
                ]
            }
        },
        "dbnaclallexternal": {
            "Description": "outbound rule for web nacl",
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "CidrBlock": "0.0.0.0/0",
                "RuleNumber": 100,
                "NetworkAclId": {
                    "Ref": "dbnacl"
                },
                "Protocol": -1,
                "Egress": true,
                "RuleAction": "allow"
            }
        },
        "dbnaclallowinternal": {
            "Description": "Inbound rule for web nacl",
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "CidrBlock": {
                    "Ref": "vpccidr"
                },
                "RuleNumber": 100,
                "NetworkAclId": {
                    "Ref": "dbnacl"
                },
                "Protocol": -1,
                "RuleAction": "allow"
            }
        },
        "db2naclassociation": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "dbnacl"
                },
                "SubnetId": {
                    "Ref": "db2"
                }
            }
        },
        "db1naclassociation": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "dbnacl"
                },
                "SubnetId": {
                    "Ref": "db1"
                }
            }
        },
        "openhttpssh": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "This opens http and ssh port",
                "SecurityGroupIngress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "Description": "Open ssh port",
                        "FromPort": 22,
                        "IpProtocol": "tcp",
                        "ToPort": 22
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "Description": "Open ssh port",
                        "FromPort": 80,
                        "IpProtocol": "tcp",
                        "ToPort": 80
                    }
                ],
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "openhttpssh"
                    }
                ]
            }
        },
        "openappsg": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "This opens 8080 port",
                "SecurityGroupIngress": [
                    {
                        "CidrIp": {
                            "Ref": "vpccidr"
                        },
                        "Description": "Open ssh port",
                        "FromPort": 8080,
                        "IpProtocol": "tcp",
                        "ToPort": 8080
                    }
                ],
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "open8080"
                    }
                ]
            }
        },
        "opendbsg": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "This opens 3306 port",
                "SecurityGroupIngress": [
                    {
                        "CidrIp": {
                            "Ref": "vpccidr"
                        },
                        "Description": "Open ssh port",
                        "FromPort": 3306,
                        "IpProtocol": "tcp",
                        "ToPort": 3306
                    }
                ],
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "openmysql"
                    }
                ]
            }
        },
        "mysqlrdssubnetgroup": {
            "Type": "AWS::RDS::DBSubnetGroup",
            "Properties": {
                "DBSubnetGroupDescription": "subnet group for ntier",
                "SubnetIds": [
                    {
                        "Ref": "db1"
                    },
                    {
                        "Ref": "db2"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "mysql-subnets"
                    }
                ]
            }
        },
        "mysqlinstance": {
            "Type": "AWS::RDS::DBInstance",
            "Properties": {
                "AllocatedStorage": "20",
                "DBInstanceClass": "db.t2.micro",
                "AllowMajorVersionUpgrade": "false",
                "AutoMinorVersionUpgrade": "false",
                "BackupRetentionPeriod": 0,
                "DBInstanceIdentifier": "ltmysqlfromcf",
                "DBName": "ltnopcommerce",
                "DBSubnetGroupName": {
                    "Ref": "mysqlrdssubnetgroup"
                },
                "Engine": "mysql",
                "EngineVersion": "8.0.25",
                "MasterUsername": "qtdevops",
                "MasterUserPassword": "qtdevopsqtdevops",
                "MultiAZ": "false",
                "Port": "3306",
                "PubliclyAccessible": "false",
                "StorageEncrypted": "false",
                "StorageType": "gp2",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "mysqlrdsfromcf"
                    }
                ],
                "VPCSecurityGroups": [
                    {
                        "Ref": "opendbsg"
                    }
                ]
            }
        },
        "web": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "KeyName": {
                    "Ref": "webkeypair"
                },
                "ImageId": "ami-090717c950a5c34d3",
                "InstanceType": {
                    "Ref": "webinstancetype"
                },
                "Monitoring": "false",
                "SecurityGroupIds": [
                    {
                        "Ref": "openhttpssh"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "web"
                    }
                ],
                "SubnetId": {
                    "Ref": "web1"
                }
            }
        },
        "app": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "KeyName": {
                    "Ref": "appkeypair"
                },
                "ImageId": "ami-090717c950a5c34d3",
                "InstanceType": {
                    "Ref": "appinstancetype"
                },
                "Monitoring": "false",
                "SecurityGroupIds": [
                    {
                        "Ref": "openappsg"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "app"
                    }
                ],
                "SubnetId": {
                    "Ref": "app1"
                }
            }
        }
    }
}